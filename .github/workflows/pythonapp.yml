name: Python application CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Fetch Git history
        run: git fetch --prune --unshallow
      
      - name: Set up Python 3.11.5
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.5
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Security Scan with Bandit
        run: |
          pip install bandit
          bandit -r .
      
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV
      
      - name: Test with pytest
        run: |
          pip install pytest
          pytest

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

        - name: Set up Google Cloud SDK
          uses: google-github-actions/setup-gcloud@v1
          with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}
            service_account_key: ${{ secrets.GCP_SA_KEY }}
            export_default_credentials: true
        

      - name: Configure Docker for GCP Artifact Registry
        run: |
          set -e  # Stop execution on error
          echo "✅ Configuring Docker authentication for region: asia-south1"
          gcloud auth configure-docker asia-south1
      
      
      - name: Build and Push Docker Image
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
        run: |
          set -e
          if [ -z "$GCP_PROJECT_ID" ]; then 
            echo "Error: GCP_PROJECT_ID is not set!" 
            exit 1 
          fi
          if [ -z "$GCP_REGION" ]; then 
            echo "Error: GCP_REGION is not set!" 
            exit 1 
          fi
          IMAGE_NAME="$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/my-repo/my-python-app:latest"
          echo "Building Docker image: $IMAGE_NAME"
          docker build -t $IMAGE_NAME .
          echo "Pushing Docker image to Artifact Registry..."
          docker push $IMAGE_NAME
          echo "✅ Docker image successfully pushed: $IMAGE_NAME"

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to Google Cloud Run
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}
        run: |
          if [ -z "$GCP_PROJECT_ID" ]; then 
            echo "Error: GCP_PROJECT_ID is not set!" 
            exit 1 
          fi
          if [ -z "$GCP_REGION" ]; then 
            echo "Error: GCP_REGION is not set!" 
            exit 1 
          fi
          gcloud run deploy my-python-app \
            --image=$GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/my-repo/my-python-app:latest \
            --platform=managed \
            --region=$GCP_REGION \
            --allow-unauthenticated

      - name: Send Slack Notification on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: "❌ Build failed for commit ${{ github.sha }}"